/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PlayImport } from './routes/play'
import { Route as CustomImport } from './routes/custom'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as CustomWordleIdImport } from './routes/custom_.$wordleId'

// Create/Update Routes

const PlayRoute = PlayImport.update({
  id: '/play',
  path: '/play',
  getParentRoute: () => rootRoute,
} as any)

const CustomRoute = CustomImport.update({
  id: '/custom',
  path: '/custom',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const CustomWordleIdRoute = CustomWordleIdImport.update({
  id: '/custom_/$wordleId',
  path: '/custom/$wordleId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/custom': {
      id: '/custom'
      path: '/custom'
      fullPath: '/custom'
      preLoaderRoute: typeof CustomImport
      parentRoute: typeof rootRoute
    }
    '/play': {
      id: '/play'
      path: '/play'
      fullPath: '/play'
      preLoaderRoute: typeof PlayImport
      parentRoute: typeof rootRoute
    }
    '/custom_/$wordleId': {
      id: '/custom_/$wordleId'
      path: '/custom/$wordleId'
      fullPath: '/custom/$wordleId'
      preLoaderRoute: typeof CustomWordleIdImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/custom': typeof CustomRoute
  '/play': typeof PlayRoute
  '/custom/$wordleId': typeof CustomWordleIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/custom': typeof CustomRoute
  '/play': typeof PlayRoute
  '/custom/$wordleId': typeof CustomWordleIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/custom': typeof CustomRoute
  '/play': typeof PlayRoute
  '/custom_/$wordleId': typeof CustomWordleIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/custom'
    | '/play'
    | '/custom/$wordleId'
    | '/demo/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/custom' | '/play' | '/custom/$wordleId' | '/demo/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/custom'
    | '/play'
    | '/custom_/$wordleId'
    | '/demo/tanstack-query'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CustomRoute: typeof CustomRoute
  PlayRoute: typeof PlayRoute
  CustomWordleIdRoute: typeof CustomWordleIdRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CustomRoute: CustomRoute,
  PlayRoute: PlayRoute,
  CustomWordleIdRoute: CustomWordleIdRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/custom",
        "/play",
        "/custom_/$wordleId",
        "/demo/tanstack-query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/custom": {
      "filePath": "custom.tsx"
    },
    "/play": {
      "filePath": "play.tsx"
    },
    "/custom_/$wordleId": {
      "filePath": "custom_.$wordleId.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
